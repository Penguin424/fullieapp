///
/// Code generated by jsonToDartModel https://ashamp.github.io/jsonToDartModel/
///
class LoginUserModelUserCitasPaciente {
/*
{
  "id": 1,
  "consulta": 18,
  "prestamista": 2,
  "institucion": 1,
  "citaDisponible": true,
  "citaFecha": "2022-03-08T06:00:00.000Z",
  "citaHora": "10:00:00.000",
  "paciente": 1,
  "published_at": "2022-01-17T22:50:57.000Z",
  "created_at": "2021-12-04T17:23:10.000Z",
  "updated_at": "2022-03-23T18:19:28.000Z",
  "detalleservicio": 2,
  "citaCosto": 100,
  "citaObservaciones": "Podria llegar 10 minutos tard",
  "servicio": 1,
  "consultorio": 2
} 
*/

  int? id;
  int? consulta;
  int? prestamista;
  int? institucion;
  bool? citaDisponible;
  String? citaFecha;
  String? citaHora;
  int? paciente;
  String? publishedAt;
  String? createdAt;
  String? updatedAt;
  int? detalleservicio;
  int? citaCosto;
  String? citaObservaciones;
  int? servicio;
  int? consultorio;

  LoginUserModelUserCitasPaciente({
    this.id,
    this.consulta,
    this.prestamista,
    this.institucion,
    this.citaDisponible,
    this.citaFecha,
    this.citaHora,
    this.paciente,
    this.publishedAt,
    this.createdAt,
    this.updatedAt,
    this.detalleservicio,
    this.citaCosto,
    this.citaObservaciones,
    this.servicio,
    this.consultorio,
  });
  LoginUserModelUserCitasPaciente.fromJson(Map<String, dynamic> json) {
    id = json['id']?.toInt();
    consulta = json['consulta']?.toInt();
    prestamista = json['prestamista']?.toInt();
    institucion = json['institucion']?.toInt();
    citaDisponible = json['citaDisponible'];
    citaFecha = json['citaFecha']?.toString();
    citaHora = json['citaHora']?.toString();
    paciente = json['paciente']?.toInt();
    publishedAt = json['published_at']?.toString();
    createdAt = json['created_at']?.toString();
    updatedAt = json['updated_at']?.toString();
    detalleservicio = json['detalleservicio']?.toInt();
    citaCosto = json['citaCosto']?.toInt();
    citaObservaciones = json['citaObservaciones']?.toString();
    servicio = json['servicio']?.toInt();
    consultorio = json['consultorio']?.toInt();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['id'] = id;
    data['consulta'] = consulta;
    data['prestamista'] = prestamista;
    data['institucion'] = institucion;
    data['citaDisponible'] = citaDisponible;
    data['citaFecha'] = citaFecha;
    data['citaHora'] = citaHora;
    data['paciente'] = paciente;
    data['published_at'] = publishedAt;
    data['created_at'] = createdAt;
    data['updated_at'] = updatedAt;
    data['detalleservicio'] = detalleservicio;
    data['citaCosto'] = citaCosto;
    data['citaObservaciones'] = citaObservaciones;
    data['servicio'] = servicio;
    data['consultorio'] = consultorio;
    return data;
  }
}

class LoginUserModelUserDetalleservicios {
/*
{
  "id": 1,
  "detalleServicio": "Prueba",
  "descripcionDetalleServicio": "Prueba descripcion",
  "servicio": 2,
  "published_at": "2021-12-04T04:58:03.000Z",
  "created_at": "2021-12-04T04:58:03.000Z",
  "updated_at": "2022-01-21T01:20:48.000Z",
  "institucion": 1
} 
*/

  int? id;
  String? detalleServicio;
  String? descripcionDetalleServicio;
  int? servicio;
  String? publishedAt;
  String? createdAt;
  String? updatedAt;
  int? institucion;

  LoginUserModelUserDetalleservicios({
    this.id,
    this.detalleServicio,
    this.descripcionDetalleServicio,
    this.servicio,
    this.publishedAt,
    this.createdAt,
    this.updatedAt,
    this.institucion,
  });
  LoginUserModelUserDetalleservicios.fromJson(Map<String, dynamic> json) {
    id = json['id']?.toInt();
    detalleServicio = json['detalleServicio']?.toString();
    descripcionDetalleServicio = json['descripcionDetalleServicio']?.toString();
    servicio = json['servicio']?.toInt();
    publishedAt = json['published_at']?.toString();
    createdAt = json['created_at']?.toString();
    updatedAt = json['updated_at']?.toString();
    institucion = json['institucion']?.toInt();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['id'] = id;
    data['detalleServicio'] = detalleServicio;
    data['descripcionDetalleServicio'] = descripcionDetalleServicio;
    data['servicio'] = servicio;
    data['published_at'] = publishedAt;
    data['created_at'] = createdAt;
    data['updated_at'] = updatedAt;
    data['institucion'] = institucion;
    return data;
  }
}

class LoginUserModelUserConsultas {
/*
{
  "id": 18,
  "paciente": 1,
  "institucion": 1,
  "consultaPrecio": 100,
  "consultaComision": 15,
  "consultaTotal": 115,
  "consultaTerminada": true,
  "consultaCalificacion": 0,
  "consultaComentarios": "NINGUN COMENTARIO",
  "conultaTerminada": "2022-01-26T21:53:51.000Z",
  "published_at": "2022-01-27T04:03:41.000Z",
  "created_at": "2022-01-27T04:03:41.000Z",
  "updated_at": "2022-03-23T18:19:28.000Z",
  "prestamista": 2,
  "consultaConfirmada": false,
  "consultaMetodoDePago": "EFECTIVO",
  "consultaPagoReferencia": "EFECTIVO"
} 
*/

  int? id;
  int? paciente;
  int? institucion;
  int? consultaPrecio;
  int? consultaComision;
  int? consultaTotal;
  bool? consultaTerminada;
  int? consultaCalificacion;
  String? consultaComentarios;
  String? conultaTerminada;
  String? publishedAt;
  String? createdAt;
  String? updatedAt;
  int? prestamista;
  bool? consultaConfirmada;
  String? consultaMetodoDePago;
  String? consultaPagoReferencia;

  LoginUserModelUserConsultas({
    this.id,
    this.paciente,
    this.institucion,
    this.consultaPrecio,
    this.consultaComision,
    this.consultaTotal,
    this.consultaTerminada,
    this.consultaCalificacion,
    this.consultaComentarios,
    this.conultaTerminada,
    this.publishedAt,
    this.createdAt,
    this.updatedAt,
    this.prestamista,
    this.consultaConfirmada,
    this.consultaMetodoDePago,
    this.consultaPagoReferencia,
  });
  LoginUserModelUserConsultas.fromJson(Map<String, dynamic> json) {
    id = json['id']?.toInt();
    paciente = json['paciente']?.toInt();
    institucion = json['institucion']?.toInt();
    consultaPrecio = json['consultaPrecio']?.toInt();
    consultaComision = json['consultaComision']?.toInt();
    consultaTotal = json['consultaTotal']?.toInt();
    consultaTerminada = json['consultaTerminada'];
    consultaCalificacion = json['consultaCalificacion']?.toInt();
    consultaComentarios = json['consultaComentarios']?.toString();
    conultaTerminada = json['conultaTerminada']?.toString();
    publishedAt = json['published_at']?.toString();
    createdAt = json['created_at']?.toString();
    updatedAt = json['updated_at']?.toString();
    prestamista = json['prestamista']?.toInt();
    consultaConfirmada = json['consultaConfirmada'];
    consultaMetodoDePago = json['consultaMetodoDePago']?.toString();
    consultaPagoReferencia = json['consultaPagoReferencia']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['id'] = id;
    data['paciente'] = paciente;
    data['institucion'] = institucion;
    data['consultaPrecio'] = consultaPrecio;
    data['consultaComision'] = consultaComision;
    data['consultaTotal'] = consultaTotal;
    data['consultaTerminada'] = consultaTerminada;
    data['consultaCalificacion'] = consultaCalificacion;
    data['consultaComentarios'] = consultaComentarios;
    data['conultaTerminada'] = conultaTerminada;
    data['published_at'] = publishedAt;
    data['created_at'] = createdAt;
    data['updated_at'] = updatedAt;
    data['prestamista'] = prestamista;
    data['consultaConfirmada'] = consultaConfirmada;
    data['consultaMetodoDePago'] = consultaMetodoDePago;
    data['consultaPagoReferencia'] = consultaPagoReferencia;
    return data;
  }
}

class LoginUserModelUserImagen {
/*
{
  "id": 5,
  "name": "claptrap-borderlands-3.jpg",
  "alternativeText": "",
  "caption": "",
  "width": 1418,
  "height": 763,
  "hash": "claptrap_borderlands_3_534b28c224",
  "ext": ".jpg",
  "mime": "image/jpeg",
  "size": 136.87,
  "url": "/uploads/claptrap_borderlands_3_534b28c224.jpg",
  "provider": "local",
  "created_at": "2021-12-04T05:19:06.000Z",
  "updated_at": "2021-12-04T05:19:06.000Z"
} 
*/

  int? id;
  String? name;
  String? alternativeText;
  String? caption;
  int? width;
  int? height;
  String? hash;
  String? ext;
  String? mime;
  double? size;
  String? url;
  String? provider;
  String? createdAt;
  String? updatedAt;

  LoginUserModelUserImagen({
    this.id,
    this.name,
    this.alternativeText,
    this.caption,
    this.width,
    this.height,
    this.hash,
    this.ext,
    this.mime,
    this.size,
    this.url,
    this.provider,
    this.createdAt,
    this.updatedAt,
  });
  LoginUserModelUserImagen.fromJson(Map<String, dynamic> json) {
    id = json['id']?.toInt();
    name = json['name']?.toString();
    alternativeText = json['alternativeText']?.toString();
    caption = json['caption']?.toString();
    width = json['width']?.toInt();
    height = json['height']?.toInt();
    hash = json['hash']?.toString();
    ext = json['ext']?.toString();
    mime = json['mime']?.toString();
    size = json['size']?.toDouble();
    url = json['url']?.toString();
    provider = json['provider']?.toString();
    createdAt = json['created_at']?.toString();
    updatedAt = json['updated_at']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['id'] = id;
    data['name'] = name;
    data['alternativeText'] = alternativeText;
    data['caption'] = caption;
    data['width'] = width;
    data['height'] = height;
    data['hash'] = hash;
    data['ext'] = ext;
    data['mime'] = mime;
    data['size'] = size;
    data['url'] = url;
    data['provider'] = provider;
    data['created_at'] = createdAt;
    data['updated_at'] = updatedAt;
    return data;
  }
}

class LoginUserModelUserUsuariodireccion {
/*
{
  "id": 9,
  "direccion": "Rep√∫blica de Costa Rica 325",
  "colonia": "Quintero",
  "ciudad": "Tlaquepaque",
  "estado": "Jalisco",
  "cruces": "",
  "referencia": "",
  "longitud": -103.305,
  "latitud": 20.63127,
  "codigoPostal": "45550",
  "usuario": 1,
  "published_at": "2021-12-12T16:00:19.000Z",
  "created_at": "2021-12-12T22:12:44.000Z",
  "updated_at": "2022-03-23T18:19:28.000Z"
} 
*/

  int? id;
  String? direccion;
  String? colonia;
  String? ciudad;
  String? estado;
  String? cruces;
  String? referencia;
  double? longitud;
  double? latitud;
  String? codigoPostal;
  int? usuario;
  String? publishedAt;
  String? createdAt;
  String? updatedAt;

  LoginUserModelUserUsuariodireccion({
    this.id,
    this.direccion,
    this.colonia,
    this.ciudad,
    this.estado,
    this.cruces,
    this.referencia,
    this.longitud,
    this.latitud,
    this.codigoPostal,
    this.usuario,
    this.publishedAt,
    this.createdAt,
    this.updatedAt,
  });
  LoginUserModelUserUsuariodireccion.fromJson(Map<String, dynamic> json) {
    id = json['id']?.toInt();
    direccion = json['direccion']?.toString();
    colonia = json['colonia']?.toString();
    ciudad = json['ciudad']?.toString();
    estado = json['estado']?.toString();
    cruces = json['cruces']?.toString();
    referencia = json['referencia']?.toString();
    longitud = json['longitud']?.toDouble();
    latitud = json['latitud']?.toDouble();
    codigoPostal = json['codigoPostal']?.toString();
    usuario = json['usuario']?.toInt();
    publishedAt = json['published_at']?.toString();
    createdAt = json['created_at']?.toString();
    updatedAt = json['updated_at']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['id'] = id;
    data['direccion'] = direccion;
    data['colonia'] = colonia;
    data['ciudad'] = ciudad;
    data['estado'] = estado;
    data['cruces'] = cruces;
    data['referencia'] = referencia;
    data['longitud'] = longitud;
    data['latitud'] = latitud;
    data['codigoPostal'] = codigoPostal;
    data['usuario'] = usuario;
    data['published_at'] = publishedAt;
    data['created_at'] = createdAt;
    data['updated_at'] = updatedAt;
    return data;
  }
}

class LoginUserModelUserRole {
/*
{
  "id": 3,
  "name": "PACIENTE",
  "description": "usuario basico dentro de la app que busca servicios los cuales poder comprar",
  "type": "cliente"
} 
*/

  int? id;
  String? name;
  String? description;
  String? type;

  LoginUserModelUserRole({
    this.id,
    this.name,
    this.description,
    this.type,
  });
  LoginUserModelUserRole.fromJson(Map<String, dynamic> json) {
    id = json['id']?.toInt();
    name = json['name']?.toString();
    description = json['description']?.toString();
    type = json['type']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['id'] = id;
    data['name'] = name;
    data['description'] = description;
    data['type'] = type;
    return data;
  }
}

class LoginUserModelUser {
/*
{
  "id": 1,
  "username": "prozasoconw4",
  "email": "prozasoconw4@gmail.com",
  "provider": "local",
  "confirmed": true,
  "blocked": false,
  "role": {
    "id": 3,
    "name": "PACIENTE",
    "description": "usuario basico dentro de la app que busca servicios los cuales poder comprar",
    "type": "cliente"
  },
  "created_at": "2021-11-17T22:15:45.000Z",
  "updated_at": "2022-03-23T18:19:28.000Z",
  "usuariodireccion": {
    "id": 9,
    "direccion": "Rep√∫blica de Costa Rica 325",
    "colonia": "Quintero",
    "ciudad": "Tlaquepaque",
    "estado": "Jalisco",
    "cruces": "",
    "referencia": "",
    "longitud": -103.305,
    "latitud": 20.63127,
    "codigoPostal": "45550",
    "usuario": 1,
    "published_at": "2021-12-12T16:00:19.000Z",
    "created_at": "2021-12-12T22:12:44.000Z",
    "updated_at": "2022-03-23T18:19:28.000Z"
  },
  "telefono": "3319747514",
  "nombre": "Juan Pablo Rizo Quintero",
  "privacidad": "FIRMA",
  "imagen": {
    "id": 5,
    "name": "claptrap-borderlands-3.jpg",
    "alternativeText": "",
    "caption": "",
    "width": 1418,
    "height": 763,
    "hash": "claptrap_borderlands_3_534b28c224",
    "ext": ".jpg",
    "mime": "image/jpeg",
    "size": 136.87,
    "url": "/uploads/claptrap_borderlands_3_534b28c224.jpg",
    "provider": "local",
    "created_at": "2021-12-04T05:19:06.000Z",
    "updated_at": "2021-12-04T05:19:06.000Z"
  },
  "consultas": [
    {
      "id": 18,
      "paciente": 1,
      "institucion": 1,
      "consultaPrecio": 100,
      "consultaComision": 15,
      "consultaTotal": 115,
      "consultaTerminada": true,
      "consultaCalificacion": 0,
      "consultaComentarios": "NINGUN COMENTARIO",
      "conultaTerminada": "2022-01-26T21:53:51.000Z",
      "published_at": "2022-01-27T04:03:41.000Z",
      "created_at": "2022-01-27T04:03:41.000Z",
      "updated_at": "2022-03-23T18:19:28.000Z",
      "prestamista": 2,
      "consultaConfirmada": false,
      "consultaMetodoDePago": "EFECTIVO",
      "consultaPagoReferencia": "EFECTIVO"
    }
  ],
  "detalleservicios": [
    {
      "id": 1,
      "detalleServicio": "Prueba",
      "descripcionDetalleServicio": "Prueba descripcion",
      "servicio": 2,
      "published_at": "2021-12-04T04:58:03.000Z",
      "created_at": "2021-12-04T04:58:03.000Z",
      "updated_at": "2022-01-21T01:20:48.000Z",
      "institucion": 1
    }
  ],
  "citasPaciente": [
    {
      "id": 1,
      "consulta": 18,
      "prestamista": 2,
      "institucion": 1,
      "citaDisponible": true,
      "citaFecha": "2022-03-08T06:00:00.000Z",
      "citaHora": "10:00:00.000",
      "paciente": 1,
      "published_at": "2022-01-17T22:50:57.000Z",
      "created_at": "2021-12-04T17:23:10.000Z",
      "updated_at": "2022-03-23T18:19:28.000Z",
      "detalleservicio": 2,
      "citaCosto": 100,
      "citaObservaciones": "Podria llegar 10 minutos tard",
      "servicio": 1,
      "consultorio": 2
    }
  ]
} 
*/

  int? id;
  String? username;
  String? email;
  String? provider;
  bool? confirmed;
  bool? blocked;
  LoginUserModelUserRole? role;
  String? createdAt;
  String? updatedAt;
  LoginUserModelUserUsuariodireccion? usuariodireccion;
  String? telefono;
  String? nombre;
  String? privacidad;
  LoginUserModelUserImagen? imagen;
  List<LoginUserModelUserConsultas?>? consultas;
  List<LoginUserModelUserDetalleservicios?>? detalleservicios;
  List<LoginUserModelUserCitasPaciente?>? citasPaciente;

  LoginUserModelUser({
    this.id,
    this.username,
    this.email,
    this.provider,
    this.confirmed,
    this.blocked,
    this.role,
    this.createdAt,
    this.updatedAt,
    this.usuariodireccion,
    this.telefono,
    this.nombre,
    this.privacidad,
    this.imagen,
    this.consultas,
    this.detalleservicios,
    this.citasPaciente,
  });
  LoginUserModelUser.fromJson(Map<String, dynamic> json) {
    id = json['id']?.toInt();
    username = json['username']?.toString();
    email = json['email']?.toString();
    provider = json['provider']?.toString();
    confirmed = json['confirmed'];
    blocked = json['blocked'];
    role = (json['role'] != null)
        ? LoginUserModelUserRole.fromJson(json['role'])
        : null;
    createdAt = json['created_at']?.toString();
    updatedAt = json['updated_at']?.toString();
    usuariodireccion = (json['usuariodireccion'] != null)
        ? LoginUserModelUserUsuariodireccion.fromJson(json['usuariodireccion'])
        : null;
    telefono = json['telefono']?.toString();
    nombre = json['nombre']?.toString();
    privacidad = json['privacidad']?.toString();
    imagen = (json['imagen'] != null)
        ? LoginUserModelUserImagen.fromJson(json['imagen'])
        : null;
    if (json['consultas'] != null) {
      final v = json['consultas'];
      final arr0 = <LoginUserModelUserConsultas>[];
      v.forEach((v) {
        arr0.add(LoginUserModelUserConsultas.fromJson(v));
      });
      consultas = arr0;
    }
    if (json['detalleservicios'] != null) {
      final v = json['detalleservicios'];
      final arr0 = <LoginUserModelUserDetalleservicios>[];
      v.forEach((v) {
        arr0.add(LoginUserModelUserDetalleservicios.fromJson(v));
      });
      detalleservicios = arr0;
    }
    if (json['citasPaciente'] != null) {
      final v = json['citasPaciente'];
      final arr0 = <LoginUserModelUserCitasPaciente>[];
      v.forEach((v) {
        arr0.add(LoginUserModelUserCitasPaciente.fromJson(v));
      });
      citasPaciente = arr0;
    }
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['id'] = id;
    data['username'] = username;
    data['email'] = email;
    data['provider'] = provider;
    data['confirmed'] = confirmed;
    data['blocked'] = blocked;
    if (role != null) {
      data['role'] = role!.toJson();
    }
    data['created_at'] = createdAt;
    data['updated_at'] = updatedAt;
    if (usuariodireccion != null) {
      data['usuariodireccion'] = usuariodireccion!.toJson();
    }
    data['telefono'] = telefono;
    data['nombre'] = nombre;
    data['privacidad'] = privacidad;
    if (imagen != null) {
      data['imagen'] = imagen!.toJson();
    }
    if (consultas != null) {
      final v = consultas;
      final arr0 = [];
      for (var v in v!) {
        arr0.add(v!.toJson());
      }
      data['consultas'] = arr0;
    }
    if (detalleservicios != null) {
      final v = detalleservicios;
      final arr0 = [];
      for (var v in v!) {
        arr0.add(v!.toJson());
      }
      data['detalleservicios'] = arr0;
    }
    if (citasPaciente != null) {
      final v = citasPaciente;
      final arr0 = [];
      for (var v in v!) {
        arr0.add(v!.toJson());
      }
      data['citasPaciente'] = arr0;
    }
    return data;
  }
}

class LoginUserModel {
/*
{
  "jwt": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwiaWF0IjoxNjQ4MDYwMDA0LCJleHAiOjE2NTA2NTIwMDR9.V4JG7XkfbUXca_A1v10fB2eB03w5CbGTwfRVWUDSAfk",
  "user": {
    "id": 1,
    "username": "prozasoconw4",
    "email": "prozasoconw4@gmail.com",
    "provider": "local",
    "confirmed": true,
    "blocked": false,
    "role": {
      "id": 3,
      "name": "PACIENTE",
      "description": "usuario basico dentro de la app que busca servicios los cuales poder comprar",
      "type": "cliente"
    },
    "created_at": "2021-11-17T22:15:45.000Z",
    "updated_at": "2022-03-23T18:19:28.000Z",
    "usuariodireccion": {
      "id": 9,
      "direccion": "Rep√∫blica de Costa Rica 325",
      "colonia": "Quintero",
      "ciudad": "Tlaquepaque",
      "estado": "Jalisco",
      "cruces": "",
      "referencia": "",
      "longitud": -103.305,
      "latitud": 20.63127,
      "codigoPostal": "45550",
      "usuario": 1,
      "published_at": "2021-12-12T16:00:19.000Z",
      "created_at": "2021-12-12T22:12:44.000Z",
      "updated_at": "2022-03-23T18:19:28.000Z"
    },
    "telefono": "3319747514",
    "nombre": "Juan Pablo Rizo Quintero",
    "privacidad": "FIRMA",
    "imagen": {
      "id": 5,
      "name": "claptrap-borderlands-3.jpg",
      "alternativeText": "",
      "caption": "",
      "width": 1418,
      "height": 763,
      "hash": "claptrap_borderlands_3_534b28c224",
      "ext": ".jpg",
      "mime": "image/jpeg",
      "size": 136.87,
      "url": "/uploads/claptrap_borderlands_3_534b28c224.jpg",
      "provider": "local",
      "created_at": "2021-12-04T05:19:06.000Z",
      "updated_at": "2021-12-04T05:19:06.000Z"
    },
    "consultas": [
      {
        "id": 18,
        "paciente": 1,
        "institucion": 1,
        "consultaPrecio": 100,
        "consultaComision": 15,
        "consultaTotal": 115,
        "consultaTerminada": true,
        "consultaCalificacion": 0,
        "consultaComentarios": "NINGUN COMENTARIO",
        "conultaTerminada": "2022-01-26T21:53:51.000Z",
        "published_at": "2022-01-27T04:03:41.000Z",
        "created_at": "2022-01-27T04:03:41.000Z",
        "updated_at": "2022-03-23T18:19:28.000Z",
        "prestamista": 2,
        "consultaConfirmada": false,
        "consultaMetodoDePago": "EFECTIVO",
        "consultaPagoReferencia": "EFECTIVO"
      }
    ],
    "detalleservicios": [
      {
        "id": 1,
        "detalleServicio": "Prueba",
        "descripcionDetalleServicio": "Prueba descripcion",
        "servicio": 2,
        "published_at": "2021-12-04T04:58:03.000Z",
        "created_at": "2021-12-04T04:58:03.000Z",
        "updated_at": "2022-01-21T01:20:48.000Z",
        "institucion": 1
      }
    ],
    "citasPaciente": [
      {
        "id": 1,
        "consulta": 18,
        "prestamista": 2,
        "institucion": 1,
        "citaDisponible": true,
        "citaFecha": "2022-03-08T06:00:00.000Z",
        "citaHora": "10:00:00.000",
        "paciente": 1,
        "published_at": "2022-01-17T22:50:57.000Z",
        "created_at": "2021-12-04T17:23:10.000Z",
        "updated_at": "2022-03-23T18:19:28.000Z",
        "detalleservicio": 2,
        "citaCosto": 100,
        "citaObservaciones": "Podria llegar 10 minutos tard",
        "servicio": 1,
        "consultorio": 2
      }
    ]
  }
} 
*/

  String? jwt;
  LoginUserModelUser? user;

  LoginUserModel({
    this.jwt,
    this.user,
  });
  LoginUserModel.fromJson(Map<String, dynamic> json) {
    jwt = json['jwt']?.toString();
    user = (json['user'] != null)
        ? LoginUserModelUser.fromJson(json['user'])
        : null;
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['jwt'] = jwt;
    if (user != null) {
      data['user'] = user!.toJson();
    }
    return data;
  }
}
