///
/// Code generated by jsonToDartModel https://ashamp.github.io/jsonToDartModel/
///
class InstitucionModelConsultorios {
/*
{
  "id": 1,
  "nombre": "PRUEBA 1",
  "descripcion": "ESTA ES EL PRIMER CONSULTORIO DE PRUENA PARA LA APP",
  "isDisponible": true,
  "institucion": 1,
  "published_at": "2022-03-07T14:39:00.000Z",
  "created_at": "2022-03-07T14:38:25.000Z",
  "updated_at": "2022-03-07T14:39:06.000Z"
} 
*/

  int? id;
  String? nombre;
  String? descripcion;
  bool? isDisponible;
  int? institucion;
  String? publishedAt;
  String? createdAt;
  String? updatedAt;

  InstitucionModelConsultorios({
    this.id,
    this.nombre,
    this.descripcion,
    this.isDisponible,
    this.institucion,
    this.publishedAt,
    this.createdAt,
    this.updatedAt,
  });
  InstitucionModelConsultorios.fromJson(Map<String, dynamic> json) {
    id = json['id']?.toInt();
    nombre = json['nombre']?.toString();
    descripcion = json['descripcion']?.toString();
    isDisponible = json['isDisponible'];
    institucion = json['institucion']?.toInt();
    publishedAt = json['published_at']?.toString();
    createdAt = json['created_at']?.toString();
    updatedAt = json['updated_at']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['id'] = id;
    data['nombre'] = nombre;
    data['descripcion'] = descripcion;
    data['isDisponible'] = isDisponible;
    data['institucion'] = institucion;
    data['published_at'] = publishedAt;
    data['created_at'] = createdAt;
    data['updated_at'] = updatedAt;
    return data;
  }
}

class InstitucionModelCitas {
/*
{
  "id": 1,
  "consulta": 18,
  "prestamista": 2,
  "institucion": 1,
  "citaDisponible": true,
  "citaFecha": "2022-03-08T06:00:00.000Z",
  "citaHora": "10:00:00.000",
  "paciente": 1,
  "published_at": "2022-01-17T22:50:57.000Z",
  "created_at": "2021-12-04T17:23:10.000Z",
  "updated_at": "2022-03-23T18:19:28.000Z",
  "detalleservicio": 2,
  "citaCosto": 100,
  "citaObservaciones": "Podria llegar 10 minutos tard",
  "servicio": 1,
  "consultorio": 2
} 
*/

  int? id;
  int? consulta;
  int? prestamista;
  int? institucion;
  bool? citaDisponible;
  String? citaFecha;
  String? citaHora;
  int? paciente;
  String? publishedAt;
  String? createdAt;
  String? updatedAt;
  int? detalleservicio;
  int? citaCosto;
  String? citaObservaciones;
  int? servicio;
  int? consultorio;

  InstitucionModelCitas({
    this.id,
    this.consulta,
    this.prestamista,
    this.institucion,
    this.citaDisponible,
    this.citaFecha,
    this.citaHora,
    this.paciente,
    this.publishedAt,
    this.createdAt,
    this.updatedAt,
    this.detalleservicio,
    this.citaCosto,
    this.citaObservaciones,
    this.servicio,
    this.consultorio,
  });
  InstitucionModelCitas.fromJson(Map<String, dynamic> json) {
    id = json['id']?.toInt();
    consulta = json['consulta']?.toInt();
    prestamista = json['prestamista']?.toInt();
    institucion = json['institucion']?.toInt();
    citaDisponible = json['citaDisponible'];
    citaFecha = json['citaFecha']?.toString();
    citaHora = json['citaHora']?.toString();
    paciente = json['paciente']?.toInt();
    publishedAt = json['published_at']?.toString();
    createdAt = json['created_at']?.toString();
    updatedAt = json['updated_at']?.toString();
    detalleservicio = json['detalleservicio']?.toInt();
    citaCosto = json['citaCosto']?.toInt();
    citaObservaciones = json['citaObservaciones']?.toString();
    servicio = json['servicio']?.toInt();
    consultorio = json['consultorio']?.toInt();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['id'] = id;
    data['consulta'] = consulta;
    data['prestamista'] = prestamista;
    data['institucion'] = institucion;
    data['citaDisponible'] = citaDisponible;
    data['citaFecha'] = citaFecha;
    data['citaHora'] = citaHora;
    data['paciente'] = paciente;
    data['published_at'] = publishedAt;
    data['created_at'] = createdAt;
    data['updated_at'] = updatedAt;
    data['detalleservicio'] = detalleservicio;
    data['citaCosto'] = citaCosto;
    data['citaObservaciones'] = citaObservaciones;
    data['servicio'] = servicio;
    data['consultorio'] = consultorio;
    return data;
  }
}

class InstitucionModelConsultas {
/*
{
  "id": 18,
  "paciente": 1,
  "institucion": 1,
  "consultaPrecio": 100,
  "consultaComision": 15,
  "consultaTotal": 115,
  "consultaTerminada": true,
  "consultaCalificacion": 0,
  "consultaComentarios": "NINGUN COMENTARIO",
  "conultaTerminada": "2022-01-26T21:53:51.000Z",
  "published_at": "2022-01-27T04:03:41.000Z",
  "created_at": "2022-01-27T04:03:41.000Z",
  "updated_at": "2022-03-23T18:19:28.000Z",
  "prestamista": 2,
  "consultaConfirmada": false,
  "consultaMetodoDePago": "EFECTIVO",
  "consultaPagoReferencia": "EFECTIVO"
} 
*/

  int? id;
  int? paciente;
  int? institucion;
  int? consultaPrecio;
  int? consultaComision;
  int? consultaTotal;
  bool? consultaTerminada;
  int? consultaCalificacion;
  String? consultaComentarios;
  String? conultaTerminada;
  String? publishedAt;
  String? createdAt;
  String? updatedAt;
  int? prestamista;
  bool? consultaConfirmada;
  String? consultaMetodoDePago;
  String? consultaPagoReferencia;

  InstitucionModelConsultas({
    this.id,
    this.paciente,
    this.institucion,
    this.consultaPrecio,
    this.consultaComision,
    this.consultaTotal,
    this.consultaTerminada,
    this.consultaCalificacion,
    this.consultaComentarios,
    this.conultaTerminada,
    this.publishedAt,
    this.createdAt,
    this.updatedAt,
    this.prestamista,
    this.consultaConfirmada,
    this.consultaMetodoDePago,
    this.consultaPagoReferencia,
  });
  InstitucionModelConsultas.fromJson(Map<String, dynamic> json) {
    id = json['id']?.toInt();
    paciente = json['paciente']?.toInt();
    institucion = json['institucion']?.toInt();
    consultaPrecio = json['consultaPrecio']?.toInt();
    consultaComision = json['consultaComision']?.toInt();
    consultaTotal = json['consultaTotal']?.toInt();
    consultaTerminada = json['consultaTerminada'];
    consultaCalificacion = json['consultaCalificacion']?.toInt();
    consultaComentarios = json['consultaComentarios']?.toString();
    conultaTerminada = json['conultaTerminada']?.toString();
    publishedAt = json['published_at']?.toString();
    createdAt = json['created_at']?.toString();
    updatedAt = json['updated_at']?.toString();
    prestamista = json['prestamista']?.toInt();
    consultaConfirmada = json['consultaConfirmada'];
    consultaMetodoDePago = json['consultaMetodoDePago']?.toString();
    consultaPagoReferencia = json['consultaPagoReferencia']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['id'] = id;
    data['paciente'] = paciente;
    data['institucion'] = institucion;
    data['consultaPrecio'] = consultaPrecio;
    data['consultaComision'] = consultaComision;
    data['consultaTotal'] = consultaTotal;
    data['consultaTerminada'] = consultaTerminada;
    data['consultaCalificacion'] = consultaCalificacion;
    data['consultaComentarios'] = consultaComentarios;
    data['conultaTerminada'] = conultaTerminada;
    data['published_at'] = publishedAt;
    data['created_at'] = createdAt;
    data['updated_at'] = updatedAt;
    data['prestamista'] = prestamista;
    data['consultaConfirmada'] = consultaConfirmada;
    data['consultaMetodoDePago'] = consultaMetodoDePago;
    data['consultaPagoReferencia'] = consultaPagoReferencia;
    return data;
  }
}

class InstitucionModelDetalleservicios {
/*
{
  "id": 1,
  "detalleServicio": "Prueba",
  "descripcionDetalleServicio": "Prueba descripcion",
  "servicio": 2,
  "published_at": "2021-12-04T04:58:03.000Z",
  "created_at": "2021-12-04T04:58:03.000Z",
  "updated_at": "2022-01-21T01:20:48.000Z",
  "institucion": 1
} 
*/

  int? id;
  String? detalleServicio;
  String? descripcionDetalleServicio;
  int? servicio;
  String? publishedAt;
  String? createdAt;
  String? updatedAt;
  int? institucion;

  InstitucionModelDetalleservicios({
    this.id,
    this.detalleServicio,
    this.descripcionDetalleServicio,
    this.servicio,
    this.publishedAt,
    this.createdAt,
    this.updatedAt,
    this.institucion,
  });
  InstitucionModelDetalleservicios.fromJson(Map<String, dynamic> json) {
    id = json['id']?.toInt();
    detalleServicio = json['detalleServicio']?.toString();
    descripcionDetalleServicio = json['descripcionDetalleServicio']?.toString();
    servicio = json['servicio']?.toInt();
    publishedAt = json['published_at']?.toString();
    createdAt = json['created_at']?.toString();
    updatedAt = json['updated_at']?.toString();
    institucion = json['institucion']?.toInt();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['id'] = id;
    data['detalleServicio'] = detalleServicio;
    data['descripcionDetalleServicio'] = descripcionDetalleServicio;
    data['servicio'] = servicio;
    data['published_at'] = publishedAt;
    data['created_at'] = createdAt;
    data['updated_at'] = updatedAt;
    data['institucion'] = institucion;
    return data;
  }
}

class InstitucionModelServiciosImagenFormatsSmall {
/*
{
  "name": "small_vector.jpg",
  "hash": "small_vector_1a61579d93",
  "ext": ".jpg",
  "mime": "image/jpeg",
  "width": 500,
  "height": 281,
  "size": 9.78,
  "path": "",
  "url": "/uploads/small_vector_1a61579d93.jpg"
} 
*/

  String? name;
  String? hash;
  String? ext;
  String? mime;
  int? width;
  int? height;
  double? size;
  String? path;
  String? url;

  InstitucionModelServiciosImagenFormatsSmall({
    this.name,
    this.hash,
    this.ext,
    this.mime,
    this.width,
    this.height,
    this.size,
    this.path,
    this.url,
  });
  InstitucionModelServiciosImagenFormatsSmall.fromJson(
      Map<String, dynamic> json) {
    name = json['name']?.toString();
    hash = json['hash']?.toString();
    ext = json['ext']?.toString();
    mime = json['mime']?.toString();
    width = json['width']?.toInt();
    height = json['height']?.toInt();
    size = json['size']?.toDouble();
    path = json['path']?.toString();
    url = json['url']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['name'] = name;
    data['hash'] = hash;
    data['ext'] = ext;
    data['mime'] = mime;
    data['width'] = width;
    data['height'] = height;
    data['size'] = size;
    data['path'] = path;
    data['url'] = url;
    return data;
  }
}

class InstitucionModelServiciosImagenFormatsMedium {
/*
{
  "name": "medium_vector.jpg",
  "hash": "medium_vector_1a61579d93",
  "ext": ".jpg",
  "mime": "image/jpeg",
  "width": 750,
  "height": 422,
  "size": 17.21,
  "path": "",
  "url": "/uploads/medium_vector_1a61579d93.jpg"
} 
*/

  String? name;
  String? hash;
  String? ext;
  String? mime;
  int? width;
  int? height;
  double? size;
  String? path;
  String? url;

  InstitucionModelServiciosImagenFormatsMedium({
    this.name,
    this.hash,
    this.ext,
    this.mime,
    this.width,
    this.height,
    this.size,
    this.path,
    this.url,
  });
  InstitucionModelServiciosImagenFormatsMedium.fromJson(
      Map<String, dynamic> json) {
    name = json['name']?.toString();
    hash = json['hash']?.toString();
    ext = json['ext']?.toString();
    mime = json['mime']?.toString();
    width = json['width']?.toInt();
    height = json['height']?.toInt();
    size = json['size']?.toDouble();
    path = json['path']?.toString();
    url = json['url']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['name'] = name;
    data['hash'] = hash;
    data['ext'] = ext;
    data['mime'] = mime;
    data['width'] = width;
    data['height'] = height;
    data['size'] = size;
    data['path'] = path;
    data['url'] = url;
    return data;
  }
}

class InstitucionModelServiciosImagenFormatsLarge {
/*
{
  "name": "large_vector.jpg",
  "hash": "large_vector_1a61579d93",
  "ext": ".jpg",
  "mime": "image/jpeg",
  "width": 1000,
  "height": 562,
  "size": 26.49,
  "path": "",
  "url": "/uploads/large_vector_1a61579d93.jpg"
} 
*/

  String? name;
  String? hash;
  String? ext;
  String? mime;
  int? width;
  int? height;
  double? size;
  String? path;
  String? url;

  InstitucionModelServiciosImagenFormatsLarge({
    this.name,
    this.hash,
    this.ext,
    this.mime,
    this.width,
    this.height,
    this.size,
    this.path,
    this.url,
  });
  InstitucionModelServiciosImagenFormatsLarge.fromJson(
      Map<String, dynamic> json) {
    name = json['name']?.toString();
    hash = json['hash']?.toString();
    ext = json['ext']?.toString();
    mime = json['mime']?.toString();
    width = json['width']?.toInt();
    height = json['height']?.toInt();
    size = json['size']?.toDouble();
    path = json['path']?.toString();
    url = json['url']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['name'] = name;
    data['hash'] = hash;
    data['ext'] = ext;
    data['mime'] = mime;
    data['width'] = width;
    data['height'] = height;
    data['size'] = size;
    data['path'] = path;
    data['url'] = url;
    return data;
  }
}

class InstitucionModelServiciosImagenFormatsThumbnail {
/*
{
  "name": "thumbnail_vector.jpg",
  "hash": "thumbnail_vector_1a61579d93",
  "ext": ".jpg",
  "mime": "image/jpeg",
  "width": 245,
  "height": 138,
  "size": 3.57,
  "path": "",
  "url": "/uploads/thumbnail_vector_1a61579d93.jpg"
} 
*/

  String? name;
  String? hash;
  String? ext;
  String? mime;
  int? width;
  int? height;
  double? size;
  String? path;
  String? url;

  InstitucionModelServiciosImagenFormatsThumbnail({
    this.name,
    this.hash,
    this.ext,
    this.mime,
    this.width,
    this.height,
    this.size,
    this.path,
    this.url,
  });
  InstitucionModelServiciosImagenFormatsThumbnail.fromJson(
      Map<String, dynamic> json) {
    name = json['name']?.toString();
    hash = json['hash']?.toString();
    ext = json['ext']?.toString();
    mime = json['mime']?.toString();
    width = json['width']?.toInt();
    height = json['height']?.toInt();
    size = json['size']?.toDouble();
    path = json['path']?.toString();
    url = json['url']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['name'] = name;
    data['hash'] = hash;
    data['ext'] = ext;
    data['mime'] = mime;
    data['width'] = width;
    data['height'] = height;
    data['size'] = size;
    data['path'] = path;
    data['url'] = url;
    return data;
  }
}

class InstitucionModelServiciosImagenFormats {
/*
{
  "thumbnail": {
    "name": "thumbnail_vector.jpg",
    "hash": "thumbnail_vector_1a61579d93",
    "ext": ".jpg",
    "mime": "image/jpeg",
    "width": 245,
    "height": 138,
    "size": 3.57,
    "path": "",
    "url": "/uploads/thumbnail_vector_1a61579d93.jpg"
  },
  "large": {
    "name": "large_vector.jpg",
    "hash": "large_vector_1a61579d93",
    "ext": ".jpg",
    "mime": "image/jpeg",
    "width": 1000,
    "height": 562,
    "size": 26.49,
    "path": "",
    "url": "/uploads/large_vector_1a61579d93.jpg"
  },
  "medium": {
    "name": "medium_vector.jpg",
    "hash": "medium_vector_1a61579d93",
    "ext": ".jpg",
    "mime": "image/jpeg",
    "width": 750,
    "height": 422,
    "size": 17.21,
    "path": "",
    "url": "/uploads/medium_vector_1a61579d93.jpg"
  },
  "small": {
    "name": "small_vector.jpg",
    "hash": "small_vector_1a61579d93",
    "ext": ".jpg",
    "mime": "image/jpeg",
    "width": 500,
    "height": 281,
    "size": 9.78,
    "path": "",
    "url": "/uploads/small_vector_1a61579d93.jpg"
  }
} 
*/

  InstitucionModelServiciosImagenFormatsThumbnail? thumbnail;
  InstitucionModelServiciosImagenFormatsLarge? large;
  InstitucionModelServiciosImagenFormatsMedium? medium;
  InstitucionModelServiciosImagenFormatsSmall? small;

  InstitucionModelServiciosImagenFormats({
    this.thumbnail,
    this.large,
    this.medium,
    this.small,
  });
  InstitucionModelServiciosImagenFormats.fromJson(Map<String, dynamic> json) {
    thumbnail = (json['thumbnail'] != null)
        ? InstitucionModelServiciosImagenFormatsThumbnail.fromJson(
            json['thumbnail'])
        : null;
    large = (json['large'] != null)
        ? InstitucionModelServiciosImagenFormatsLarge.fromJson(json['large'])
        : null;
    medium = (json['medium'] != null)
        ? InstitucionModelServiciosImagenFormatsMedium.fromJson(json['medium'])
        : null;
    small = (json['small'] != null)
        ? InstitucionModelServiciosImagenFormatsSmall.fromJson(json['small'])
        : null;
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    if (thumbnail != null) {
      data['thumbnail'] = thumbnail!.toJson();
    }
    if (large != null) {
      data['large'] = large!.toJson();
    }
    if (medium != null) {
      data['medium'] = medium!.toJson();
    }
    if (small != null) {
      data['small'] = small!.toJson();
    }
    return data;
  }
}

class InstitucionModelServiciosImagen {
/*
{
  "id": 2,
  "name": "vector.jpg",
  "alternativeText": "",
  "caption": "",
  "width": 1954,
  "height": 1099,
  "formats": {
    "thumbnail": {
      "name": "thumbnail_vector.jpg",
      "hash": "thumbnail_vector_1a61579d93",
      "ext": ".jpg",
      "mime": "image/jpeg",
      "width": 245,
      "height": 138,
      "size": 3.57,
      "path": "",
      "url": "/uploads/thumbnail_vector_1a61579d93.jpg"
    },
    "large": {
      "name": "large_vector.jpg",
      "hash": "large_vector_1a61579d93",
      "ext": ".jpg",
      "mime": "image/jpeg",
      "width": 1000,
      "height": 562,
      "size": 26.49,
      "path": "",
      "url": "/uploads/large_vector_1a61579d93.jpg"
    },
    "medium": {
      "name": "medium_vector.jpg",
      "hash": "medium_vector_1a61579d93",
      "ext": ".jpg",
      "mime": "image/jpeg",
      "width": 750,
      "height": 422,
      "size": 17.21,
      "path": "",
      "url": "/uploads/medium_vector_1a61579d93.jpg"
    },
    "small": {
      "name": "small_vector.jpg",
      "hash": "small_vector_1a61579d93",
      "ext": ".jpg",
      "mime": "image/jpeg",
      "width": 500,
      "height": 281,
      "size": 9.78,
      "path": "",
      "url": "/uploads/small_vector_1a61579d93.jpg"
    }
  },
  "hash": "vector_1a61579d93",
  "ext": ".jpg",
  "mime": "image/jpeg",
  "size": 72.8,
  "url": "/uploads/vector_1a61579d93.jpg",
  "previewUrl": "",
  "provider": "local",
  "provider_metadata": "",
  "created_at": "2021-12-01T21:16:47.000Z",
  "updated_at": "2021-12-01T21:16:47.000Z"
} 
*/

  int? id;
  String? name;
  String? alternativeText;
  String? caption;
  int? width;
  int? height;
  InstitucionModelServiciosImagenFormats? formats;
  String? hash;
  String? ext;
  String? mime;
  double? size;
  String? url;
  String? previewUrl;
  String? provider;
  String? providerMetadata;
  String? createdAt;
  String? updatedAt;

  InstitucionModelServiciosImagen({
    this.id,
    this.name,
    this.alternativeText,
    this.caption,
    this.width,
    this.height,
    this.formats,
    this.hash,
    this.ext,
    this.mime,
    this.size,
    this.url,
    this.previewUrl,
    this.provider,
    this.providerMetadata,
    this.createdAt,
    this.updatedAt,
  });
  InstitucionModelServiciosImagen.fromJson(Map<String, dynamic> json) {
    id = json['id']?.toInt();
    name = json['name']?.toString();
    alternativeText = json['alternativeText']?.toString();
    caption = json['caption']?.toString();
    width = json['width']?.toInt();
    height = json['height']?.toInt();
    formats = (json['formats'] != null)
        ? InstitucionModelServiciosImagenFormats.fromJson(json['formats'])
        : null;
    hash = json['hash']?.toString();
    ext = json['ext']?.toString();
    mime = json['mime']?.toString();
    size = json['size']?.toDouble();
    url = json['url']?.toString();
    previewUrl = json['previewUrl']?.toString();
    provider = json['provider']?.toString();
    providerMetadata = json['provider_metadata']?.toString();
    createdAt = json['created_at']?.toString();
    updatedAt = json['updated_at']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['id'] = id;
    data['name'] = name;
    data['alternativeText'] = alternativeText;
    data['caption'] = caption;
    data['width'] = width;
    data['height'] = height;
    if (formats != null) {
      data['formats'] = formats!.toJson();
    }
    data['hash'] = hash;
    data['ext'] = ext;
    data['mime'] = mime;
    data['size'] = size;
    data['url'] = url;
    data['previewUrl'] = previewUrl;
    data['provider'] = provider;
    data['provider_metadata'] = providerMetadata;
    data['created_at'] = createdAt;
    data['updated_at'] = updatedAt;
    return data;
  }
}

class InstitucionModelServicios {
/*
{
  "id": 1,
  "servicioNombre": "Resonancia",
  "published_at": "2021-12-01T21:19:27.000Z",
  "created_at": "2021-12-01T21:17:00.000Z",
  "updated_at": "2021-12-01T21:19:27.000Z",
  "imagen": [
    {
      "id": 2,
      "name": "vector.jpg",
      "alternativeText": "",
      "caption": "",
      "width": 1954,
      "height": 1099,
      "formats": {
        "thumbnail": {
          "name": "thumbnail_vector.jpg",
          "hash": "thumbnail_vector_1a61579d93",
          "ext": ".jpg",
          "mime": "image/jpeg",
          "width": 245,
          "height": 138,
          "size": 3.57,
          "path": "",
          "url": "/uploads/thumbnail_vector_1a61579d93.jpg"
        },
        "large": {
          "name": "large_vector.jpg",
          "hash": "large_vector_1a61579d93",
          "ext": ".jpg",
          "mime": "image/jpeg",
          "width": 1000,
          "height": 562,
          "size": 26.49,
          "path": "",
          "url": "/uploads/large_vector_1a61579d93.jpg"
        },
        "medium": {
          "name": "medium_vector.jpg",
          "hash": "medium_vector_1a61579d93",
          "ext": ".jpg",
          "mime": "image/jpeg",
          "width": 750,
          "height": 422,
          "size": 17.21,
          "path": "",
          "url": "/uploads/medium_vector_1a61579d93.jpg"
        },
        "small": {
          "name": "small_vector.jpg",
          "hash": "small_vector_1a61579d93",
          "ext": ".jpg",
          "mime": "image/jpeg",
          "width": 500,
          "height": 281,
          "size": 9.78,
          "path": "",
          "url": "/uploads/small_vector_1a61579d93.jpg"
        }
      },
      "hash": "vector_1a61579d93",
      "ext": ".jpg",
      "mime": "image/jpeg",
      "size": 72.8,
      "url": "/uploads/vector_1a61579d93.jpg",
      "previewUrl": "",
      "provider": "local",
      "provider_metadata": "",
      "created_at": "2021-12-01T21:16:47.000Z",
      "updated_at": "2021-12-01T21:16:47.000Z"
    }
  ]
} 
*/

  int? id;
  String? servicioNombre;
  String? publishedAt;
  String? createdAt;
  String? updatedAt;
  List<InstitucionModelServiciosImagen?>? imagen;

  InstitucionModelServicios({
    this.id,
    this.servicioNombre,
    this.publishedAt,
    this.createdAt,
    this.updatedAt,
    this.imagen,
  });
  InstitucionModelServicios.fromJson(Map<String, dynamic> json) {
    id = json['id']?.toInt();
    servicioNombre = json['servicioNombre']?.toString();
    publishedAt = json['published_at']?.toString();
    createdAt = json['created_at']?.toString();
    updatedAt = json['updated_at']?.toString();
    if (json['imagen'] != null) {
      final v = json['imagen'];
      final arr0 = <InstitucionModelServiciosImagen>[];
      v.forEach((v) {
        arr0.add(InstitucionModelServiciosImagen.fromJson(v));
      });
      imagen = arr0;
    }
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['id'] = id;
    data['servicioNombre'] = servicioNombre;
    data['published_at'] = publishedAt;
    data['created_at'] = createdAt;
    data['updated_at'] = updatedAt;
    if (imagen != null) {
      final v = imagen;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v!.toJson());
      });
      data['imagen'] = arr0;
    }
    return data;
  }
}

class InstitucionModelUsuariosImagenFormatsThumbnail {
/*
{
  "name": "thumbnail_perrito.jpeg",
  "hash": "thumbnail_perrito_b157ef019d",
  "ext": ".jpeg",
  "mime": "image/jpeg",
  "width": 157,
  "height": 156,
  "size": 5.91,
  "path": "",
  "url": "/uploads/thumbnail_perrito_b157ef019d.jpeg"
} 
*/

  String? name;
  String? hash;
  String? ext;
  String? mime;
  int? width;
  int? height;
  double? size;
  String? path;
  String? url;

  InstitucionModelUsuariosImagenFormatsThumbnail({
    this.name,
    this.hash,
    this.ext,
    this.mime,
    this.width,
    this.height,
    this.size,
    this.path,
    this.url,
  });
  InstitucionModelUsuariosImagenFormatsThumbnail.fromJson(
      Map<String, dynamic> json) {
    name = json['name']?.toString();
    hash = json['hash']?.toString();
    ext = json['ext']?.toString();
    mime = json['mime']?.toString();
    width = json['width']?.toInt();
    height = json['height']?.toInt();
    size = json['size']?.toDouble();
    path = json['path']?.toString();
    url = json['url']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['name'] = name;
    data['hash'] = hash;
    data['ext'] = ext;
    data['mime'] = mime;
    data['width'] = width;
    data['height'] = height;
    data['size'] = size;
    data['path'] = path;
    data['url'] = url;
    return data;
  }
}

class InstitucionModelUsuariosImagenFormats {
/*
{
  "thumbnail": {
    "name": "thumbnail_perrito.jpeg",
    "hash": "thumbnail_perrito_b157ef019d",
    "ext": ".jpeg",
    "mime": "image/jpeg",
    "width": 157,
    "height": 156,
    "size": 5.91,
    "path": "",
    "url": "/uploads/thumbnail_perrito_b157ef019d.jpeg"
  }
} 
*/

  InstitucionModelUsuariosImagenFormatsThumbnail? thumbnail;

  InstitucionModelUsuariosImagenFormats({
    this.thumbnail,
  });
  InstitucionModelUsuariosImagenFormats.fromJson(Map<String, dynamic> json) {
    thumbnail = (json['thumbnail'] != null)
        ? InstitucionModelUsuariosImagenFormatsThumbnail.fromJson(
            json['thumbnail'])
        : null;
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    if (thumbnail != null) {
      data['thumbnail'] = thumbnail!.toJson();
    }
    return data;
  }
}

class InstitucionModelUsuariosImagen {
/*
{
  "id": 3,
  "name": "perrito.jpeg",
  "alternativeText": "",
  "caption": "",
  "width": 225,
  "height": 224,
  "formats": {
    "thumbnail": {
      "name": "thumbnail_perrito.jpeg",
      "hash": "thumbnail_perrito_b157ef019d",
      "ext": ".jpeg",
      "mime": "image/jpeg",
      "width": 157,
      "height": 156,
      "size": 5.91,
      "path": "",
      "url": "/uploads/thumbnail_perrito_b157ef019d.jpeg"
    }
  },
  "hash": "perrito_b157ef019d",
  "ext": ".jpeg",
  "mime": "image/jpeg",
  "size": 7.44,
  "url": "/uploads/perrito_b157ef019d.jpeg",
  "previewUrl": "",
  "provider": "local",
  "provider_metadata": "",
  "created_at": "2021-12-01T21:48:14.000Z",
  "updated_at": "2021-12-01T21:48:14.000Z"
} 
*/

  int? id;
  String? name;
  String? alternativeText;
  String? caption;
  int? width;
  int? height;
  InstitucionModelUsuariosImagenFormats? formats;
  String? hash;
  String? ext;
  String? mime;
  double? size;
  String? url;
  String? previewUrl;
  String? provider;
  String? providerMetadata;
  String? createdAt;
  String? updatedAt;

  InstitucionModelUsuariosImagen({
    this.id,
    this.name,
    this.alternativeText,
    this.caption,
    this.width,
    this.height,
    this.formats,
    this.hash,
    this.ext,
    this.mime,
    this.size,
    this.url,
    this.previewUrl,
    this.provider,
    this.providerMetadata,
    this.createdAt,
    this.updatedAt,
  });
  InstitucionModelUsuariosImagen.fromJson(Map<String, dynamic> json) {
    id = json['id']?.toInt();
    name = json['name']?.toString();
    alternativeText = json['alternativeText']?.toString();
    caption = json['caption']?.toString();
    width = json['width']?.toInt();
    height = json['height']?.toInt();
    formats = (json['formats'] != null)
        ? InstitucionModelUsuariosImagenFormats.fromJson(json['formats'])
        : null;
    hash = json['hash']?.toString();
    ext = json['ext']?.toString();
    mime = json['mime']?.toString();
    size = json['size']?.toDouble();
    url = json['url']?.toString();
    previewUrl = json['previewUrl']?.toString();
    provider = json['provider']?.toString();
    providerMetadata = json['provider_metadata']?.toString();
    createdAt = json['created_at']?.toString();
    updatedAt = json['updated_at']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['id'] = id;
    data['name'] = name;
    data['alternativeText'] = alternativeText;
    data['caption'] = caption;
    data['width'] = width;
    data['height'] = height;
    if (formats != null) {
      data['formats'] = formats!.toJson();
    }
    data['hash'] = hash;
    data['ext'] = ext;
    data['mime'] = mime;
    data['size'] = size;
    data['url'] = url;
    data['previewUrl'] = previewUrl;
    data['provider'] = provider;
    data['provider_metadata'] = providerMetadata;
    data['created_at'] = createdAt;
    data['updated_at'] = updatedAt;
    return data;
  }
}

class InstitucionModelUsuarios {
/*
{
  "id": 2,
  "username": "Ricardo Garcia Cervantes",
  "email": "ricardo@penguin424.me",
  "provider": "local",
  "confirmed": true,
  "blocked": false,
  "role": 4,
  "created_at": "2021-12-01T21:13:26.000Z",
  "updated_at": "2022-03-14T19:50:30.000Z",
  "usuariodireccion": 1,
  "telefono": "3319747514",
  "nombre": "Ricardo Garcia Cervantes",
  "privacidad": "SIEMPRE",
  "imagen": {
    "id": 3,
    "name": "perrito.jpeg",
    "alternativeText": "",
    "caption": "",
    "width": 225,
    "height": 224,
    "formats": {
      "thumbnail": {
        "name": "thumbnail_perrito.jpeg",
        "hash": "thumbnail_perrito_b157ef019d",
        "ext": ".jpeg",
        "mime": "image/jpeg",
        "width": 157,
        "height": 156,
        "size": 5.91,
        "path": "",
        "url": "/uploads/thumbnail_perrito_b157ef019d.jpeg"
      }
    },
    "hash": "perrito_b157ef019d",
    "ext": ".jpeg",
    "mime": "image/jpeg",
    "size": 7.44,
    "url": "/uploads/perrito_b157ef019d.jpeg",
    "previewUrl": "",
    "provider": "local",
    "provider_metadata": "",
    "created_at": "2021-12-01T21:48:14.000Z",
    "updated_at": "2021-12-01T21:48:14.000Z"
  }
} 
*/

  int? id;
  String? username;
  String? email;
  String? provider;
  bool? confirmed;
  bool? blocked;
  int? role;
  String? createdAt;
  String? updatedAt;
  int? usuariodireccion;
  String? telefono;
  String? nombre;
  String? privacidad;
  InstitucionModelUsuariosImagen? imagen;

  InstitucionModelUsuarios({
    this.id,
    this.username,
    this.email,
    this.provider,
    this.confirmed,
    this.blocked,
    this.role,
    this.createdAt,
    this.updatedAt,
    this.usuariodireccion,
    this.telefono,
    this.nombre,
    this.privacidad,
    this.imagen,
  });
  InstitucionModelUsuarios.fromJson(Map<String, dynamic> json) {
    id = json['id']?.toInt();
    username = json['username']?.toString();
    email = json['email']?.toString();
    provider = json['provider']?.toString();
    confirmed = json['confirmed'];
    blocked = json['blocked'];
    role = json['role']?.toInt();
    createdAt = json['created_at']?.toString();
    updatedAt = json['updated_at']?.toString();
    usuariodireccion = json['usuariodireccion']?.toInt();
    telefono = json['telefono']?.toString();
    nombre = json['nombre']?.toString();
    privacidad = json['privacidad']?.toString();
    imagen = (json['imagen'] != null)
        ? InstitucionModelUsuariosImagen.fromJson(json['imagen'])
        : null;
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['id'] = id;
    data['username'] = username;
    data['email'] = email;
    data['provider'] = provider;
    data['confirmed'] = confirmed;
    data['blocked'] = blocked;
    data['role'] = role;
    data['created_at'] = createdAt;
    data['updated_at'] = updatedAt;
    data['usuariodireccion'] = usuariodireccion;
    data['telefono'] = telefono;
    data['nombre'] = nombre;
    data['privacidad'] = privacidad;
    if (imagen != null) {
      data['imagen'] = imagen!.toJson();
    }
    return data;
  }
}

class InstitucionModelImagenFormatsSmall {
/*
{
  "name": "small_FB_IMG_1626638999498.jpg",
  "hash": "small_FB_IMG_1626638999498_ff97bc17f5",
  "ext": ".jpg",
  "mime": "image/jpeg",
  "width": 500,
  "height": 369,
  "size": 34.24,
  "path": "",
  "url": "/uploads/small_FB_IMG_1626638999498_ff97bc17f5.jpg"
} 
*/

  String? name;
  String? hash;
  String? ext;
  String? mime;
  int? width;
  int? height;
  double? size;
  String? path;
  String? url;

  InstitucionModelImagenFormatsSmall({
    this.name,
    this.hash,
    this.ext,
    this.mime,
    this.width,
    this.height,
    this.size,
    this.path,
    this.url,
  });
  InstitucionModelImagenFormatsSmall.fromJson(Map<String, dynamic> json) {
    name = json['name']?.toString();
    hash = json['hash']?.toString();
    ext = json['ext']?.toString();
    mime = json['mime']?.toString();
    width = json['width']?.toInt();
    height = json['height']?.toInt();
    size = json['size']?.toDouble();
    path = json['path']?.toString();
    url = json['url']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['name'] = name;
    data['hash'] = hash;
    data['ext'] = ext;
    data['mime'] = mime;
    data['width'] = width;
    data['height'] = height;
    data['size'] = size;
    data['path'] = path;
    data['url'] = url;
    return data;
  }
}

class InstitucionModelImagenFormatsMedium {
/*
{
  "name": "medium_FB_IMG_1626638999498.jpg",
  "hash": "medium_FB_IMG_1626638999498_ff97bc17f5",
  "ext": ".jpg",
  "mime": "image/jpeg",
  "width": 750,
  "height": 553,
  "size": 64.84,
  "path": "",
  "url": "/uploads/medium_FB_IMG_1626638999498_ff97bc17f5.jpg"
} 
*/

  String? name;
  String? hash;
  String? ext;
  String? mime;
  int? width;
  int? height;
  double? size;
  String? path;
  String? url;

  InstitucionModelImagenFormatsMedium({
    this.name,
    this.hash,
    this.ext,
    this.mime,
    this.width,
    this.height,
    this.size,
    this.path,
    this.url,
  });
  InstitucionModelImagenFormatsMedium.fromJson(Map<String, dynamic> json) {
    name = json['name']?.toString();
    hash = json['hash']?.toString();
    ext = json['ext']?.toString();
    mime = json['mime']?.toString();
    width = json['width']?.toInt();
    height = json['height']?.toInt();
    size = json['size']?.toDouble();
    path = json['path']?.toString();
    url = json['url']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['name'] = name;
    data['hash'] = hash;
    data['ext'] = ext;
    data['mime'] = mime;
    data['width'] = width;
    data['height'] = height;
    data['size'] = size;
    data['path'] = path;
    data['url'] = url;
    return data;
  }
}

class InstitucionModelImagenFormatsLarge {
/*
{
  "name": "large_FB_IMG_1626638999498.jpg",
  "hash": "large_FB_IMG_1626638999498_ff97bc17f5",
  "ext": ".jpg",
  "mime": "image/jpeg",
  "width": 1000,
  "height": 737,
  "size": 99.16,
  "path": "",
  "url": "/uploads/large_FB_IMG_1626638999498_ff97bc17f5.jpg"
} 
*/

  String? name;
  String? hash;
  String? ext;
  String? mime;
  int? width;
  int? height;
  double? size;
  String? path;
  String? url;

  InstitucionModelImagenFormatsLarge({
    this.name,
    this.hash,
    this.ext,
    this.mime,
    this.width,
    this.height,
    this.size,
    this.path,
    this.url,
  });
  InstitucionModelImagenFormatsLarge.fromJson(Map<String, dynamic> json) {
    name = json['name']?.toString();
    hash = json['hash']?.toString();
    ext = json['ext']?.toString();
    mime = json['mime']?.toString();
    width = json['width']?.toInt();
    height = json['height']?.toInt();
    size = json['size']?.toDouble();
    path = json['path']?.toString();
    url = json['url']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['name'] = name;
    data['hash'] = hash;
    data['ext'] = ext;
    data['mime'] = mime;
    data['width'] = width;
    data['height'] = height;
    data['size'] = size;
    data['path'] = path;
    data['url'] = url;
    return data;
  }
}

class InstitucionModelImagenFormatsThumbnail {
/*
{
  "name": "thumbnail_FB_IMG_1626638999498.jpg",
  "hash": "thumbnail_FB_IMG_1626638999498_ff97bc17f5",
  "ext": ".jpg",
  "mime": "image/jpeg",
  "width": 212,
  "height": 156,
  "size": 8.99,
  "path": "",
  "url": "/uploads/thumbnail_FB_IMG_1626638999498_ff97bc17f5.jpg"
} 
*/

  String? name;
  String? hash;
  String? ext;
  String? mime;
  int? width;
  int? height;
  double? size;
  String? path;
  String? url;

  InstitucionModelImagenFormatsThumbnail({
    this.name,
    this.hash,
    this.ext,
    this.mime,
    this.width,
    this.height,
    this.size,
    this.path,
    this.url,
  });
  InstitucionModelImagenFormatsThumbnail.fromJson(Map<String, dynamic> json) {
    name = json['name']?.toString();
    hash = json['hash']?.toString();
    ext = json['ext']?.toString();
    mime = json['mime']?.toString();
    width = json['width']?.toInt();
    height = json['height']?.toInt();
    size = json['size']?.toDouble();
    path = json['path']?.toString();
    url = json['url']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['name'] = name;
    data['hash'] = hash;
    data['ext'] = ext;
    data['mime'] = mime;
    data['width'] = width;
    data['height'] = height;
    data['size'] = size;
    data['path'] = path;
    data['url'] = url;
    return data;
  }
}

class InstitucionModelImagenFormats {
/*
{
  "thumbnail": {
    "name": "thumbnail_FB_IMG_1626638999498.jpg",
    "hash": "thumbnail_FB_IMG_1626638999498_ff97bc17f5",
    "ext": ".jpg",
    "mime": "image/jpeg",
    "width": 212,
    "height": 156,
    "size": 8.99,
    "path": "",
    "url": "/uploads/thumbnail_FB_IMG_1626638999498_ff97bc17f5.jpg"
  },
  "large": {
    "name": "large_FB_IMG_1626638999498.jpg",
    "hash": "large_FB_IMG_1626638999498_ff97bc17f5",
    "ext": ".jpg",
    "mime": "image/jpeg",
    "width": 1000,
    "height": 737,
    "size": 99.16,
    "path": "",
    "url": "/uploads/large_FB_IMG_1626638999498_ff97bc17f5.jpg"
  },
  "medium": {
    "name": "medium_FB_IMG_1626638999498.jpg",
    "hash": "medium_FB_IMG_1626638999498_ff97bc17f5",
    "ext": ".jpg",
    "mime": "image/jpeg",
    "width": 750,
    "height": 553,
    "size": 64.84,
    "path": "",
    "url": "/uploads/medium_FB_IMG_1626638999498_ff97bc17f5.jpg"
  },
  "small": {
    "name": "small_FB_IMG_1626638999498.jpg",
    "hash": "small_FB_IMG_1626638999498_ff97bc17f5",
    "ext": ".jpg",
    "mime": "image/jpeg",
    "width": 500,
    "height": 369,
    "size": 34.24,
    "path": "",
    "url": "/uploads/small_FB_IMG_1626638999498_ff97bc17f5.jpg"
  }
} 
*/

  InstitucionModelImagenFormatsThumbnail? thumbnail;
  InstitucionModelImagenFormatsLarge? large;
  InstitucionModelImagenFormatsMedium? medium;
  InstitucionModelImagenFormatsSmall? small;

  InstitucionModelImagenFormats({
    this.thumbnail,
    this.large,
    this.medium,
    this.small,
  });
  InstitucionModelImagenFormats.fromJson(Map<String, dynamic> json) {
    thumbnail = (json['thumbnail'] != null)
        ? InstitucionModelImagenFormatsThumbnail.fromJson(json['thumbnail'])
        : null;
    large = (json['large'] != null)
        ? InstitucionModelImagenFormatsLarge.fromJson(json['large'])
        : null;
    medium = (json['medium'] != null)
        ? InstitucionModelImagenFormatsMedium.fromJson(json['medium'])
        : null;
    small = (json['small'] != null)
        ? InstitucionModelImagenFormatsSmall.fromJson(json['small'])
        : null;
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    if (thumbnail != null) {
      data['thumbnail'] = thumbnail!.toJson();
    }
    if (large != null) {
      data['large'] = large!.toJson();
    }
    if (medium != null) {
      data['medium'] = medium!.toJson();
    }
    if (small != null) {
      data['small'] = small!.toJson();
    }
    return data;
  }
}

class InstitucionModelImagen {
/*
{
  "id": 1,
  "name": "FB_IMG_1626638999498.jpg",
  "alternativeText": "",
  "caption": "",
  "width": 1080,
  "height": 796,
  "formats": {
    "thumbnail": {
      "name": "thumbnail_FB_IMG_1626638999498.jpg",
      "hash": "thumbnail_FB_IMG_1626638999498_ff97bc17f5",
      "ext": ".jpg",
      "mime": "image/jpeg",
      "width": 212,
      "height": 156,
      "size": 8.99,
      "path": "",
      "url": "/uploads/thumbnail_FB_IMG_1626638999498_ff97bc17f5.jpg"
    },
    "large": {
      "name": "large_FB_IMG_1626638999498.jpg",
      "hash": "large_FB_IMG_1626638999498_ff97bc17f5",
      "ext": ".jpg",
      "mime": "image/jpeg",
      "width": 1000,
      "height": 737,
      "size": 99.16,
      "path": "",
      "url": "/uploads/large_FB_IMG_1626638999498_ff97bc17f5.jpg"
    },
    "medium": {
      "name": "medium_FB_IMG_1626638999498.jpg",
      "hash": "medium_FB_IMG_1626638999498_ff97bc17f5",
      "ext": ".jpg",
      "mime": "image/jpeg",
      "width": 750,
      "height": 553,
      "size": 64.84,
      "path": "",
      "url": "/uploads/medium_FB_IMG_1626638999498_ff97bc17f5.jpg"
    },
    "small": {
      "name": "small_FB_IMG_1626638999498.jpg",
      "hash": "small_FB_IMG_1626638999498_ff97bc17f5",
      "ext": ".jpg",
      "mime": "image/jpeg",
      "width": 500,
      "height": 369,
      "size": 34.24,
      "path": "",
      "url": "/uploads/small_FB_IMG_1626638999498_ff97bc17f5.jpg"
    }
  },
  "hash": "FB_IMG_1626638999498_ff97bc17f5",
  "ext": ".jpg",
  "mime": "image/jpeg",
  "size": 74.51,
  "url": "/uploads/FB_IMG_1626638999498_ff97bc17f5.jpg",
  "previewUrl": "",
  "provider": "local",
  "provider_metadata": "",
  "created_at": "2021-12-01T21:16:02.000Z",
  "updated_at": "2021-12-01T21:16:02.000Z"
} 
*/

  int? id;
  String? name;
  String? alternativeText;
  String? caption;
  int? width;
  int? height;
  InstitucionModelImagenFormats? formats;
  String? hash;
  String? ext;
  String? mime;
  double? size;
  String? url;
  String? previewUrl;
  String? provider;
  String? providerMetadata;
  String? createdAt;
  String? updatedAt;

  InstitucionModelImagen({
    this.id,
    this.name,
    this.alternativeText,
    this.caption,
    this.width,
    this.height,
    this.formats,
    this.hash,
    this.ext,
    this.mime,
    this.size,
    this.url,
    this.previewUrl,
    this.provider,
    this.providerMetadata,
    this.createdAt,
    this.updatedAt,
  });
  InstitucionModelImagen.fromJson(Map<String, dynamic> json) {
    id = json['id']?.toInt();
    name = json['name']?.toString();
    alternativeText = json['alternativeText']?.toString();
    caption = json['caption']?.toString();
    width = json['width']?.toInt();
    height = json['height']?.toInt();
    formats = (json['formats'] != null)
        ? InstitucionModelImagenFormats.fromJson(json['formats'])
        : null;
    hash = json['hash']?.toString();
    ext = json['ext']?.toString();
    mime = json['mime']?.toString();
    size = json['size']?.toDouble();
    url = json['url']?.toString();
    previewUrl = json['previewUrl']?.toString();
    provider = json['provider']?.toString();
    providerMetadata = json['provider_metadata']?.toString();
    createdAt = json['created_at']?.toString();
    updatedAt = json['updated_at']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['id'] = id;
    data['name'] = name;
    data['alternativeText'] = alternativeText;
    data['caption'] = caption;
    data['width'] = width;
    data['height'] = height;
    if (formats != null) {
      data['formats'] = formats!.toJson();
    }
    data['hash'] = hash;
    data['ext'] = ext;
    data['mime'] = mime;
    data['size'] = size;
    data['url'] = url;
    data['previewUrl'] = previewUrl;
    data['provider'] = provider;
    data['provider_metadata'] = providerMetadata;
    data['created_at'] = createdAt;
    data['updated_at'] = updatedAt;
    return data;
  }
}

class InstitucionModelInstituciondireccion {
/*
{
  "id": 1,
  "published_at": "2021-12-04T17:17:58.000Z",
  "created_at": "2021-12-04T17:01:28.000Z",
  "updated_at": "2022-01-21T01:20:48.000Z",
  "direccion": "Republica de costa rica 325",
  "colonia": "Quintero",
  "ciudad": "Tlaquepaque",
  "estado": "Jalisco",
  "cruces": "Rio seco y lerdo de tejada",
  "referencia": "Es una casa con pornton negro y pintura verde",
  "latitud": 20.569447376699006,
  "longitud": -103.2272873133507,
  "codigoPostal": "45550",
  "institucion": 1
} 
*/

  int? id;
  String? publishedAt;
  String? createdAt;
  String? updatedAt;
  String? direccion;
  String? colonia;
  String? ciudad;
  String? estado;
  String? cruces;
  String? referencia;
  double? latitud;
  double? longitud;
  String? codigoPostal;
  int? institucion;

  InstitucionModelInstituciondireccion({
    this.id,
    this.publishedAt,
    this.createdAt,
    this.updatedAt,
    this.direccion,
    this.colonia,
    this.ciudad,
    this.estado,
    this.cruces,
    this.referencia,
    this.latitud,
    this.longitud,
    this.codigoPostal,
    this.institucion,
  });
  InstitucionModelInstituciondireccion.fromJson(Map<String, dynamic> json) {
    id = json['id']?.toInt();
    publishedAt = json['published_at']?.toString();
    createdAt = json['created_at']?.toString();
    updatedAt = json['updated_at']?.toString();
    direccion = json['direccion']?.toString();
    colonia = json['colonia']?.toString();
    ciudad = json['ciudad']?.toString();
    estado = json['estado']?.toString();
    cruces = json['cruces']?.toString();
    referencia = json['referencia']?.toString();
    latitud = json['latitud']?.toDouble();
    longitud = json['longitud']?.toDouble();
    codigoPostal = json['codigoPostal']?.toString();
    institucion = json['institucion']?.toInt();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['id'] = id;
    data['published_at'] = publishedAt;
    data['created_at'] = createdAt;
    data['updated_at'] = updatedAt;
    data['direccion'] = direccion;
    data['colonia'] = colonia;
    data['ciudad'] = ciudad;
    data['estado'] = estado;
    data['cruces'] = cruces;
    data['referencia'] = referencia;
    data['latitud'] = latitud;
    data['longitud'] = longitud;
    data['codigoPostal'] = codigoPostal;
    data['institucion'] = institucion;
    return data;
  }
}

class InstitucionModel {
/*
{
  "id": 1,
  "institucionNombre": "HOSPITAL CIVIL",
  "published_at": "2021-12-01T21:19:31.000Z",
  "created_at": "2021-12-01T21:16:24.000Z",
  "updated_at": "2022-01-21T01:20:48.000Z",
  "instituciondireccion": {
    "id": 1,
    "published_at": "2021-12-04T17:17:58.000Z",
    "created_at": "2021-12-04T17:01:28.000Z",
    "updated_at": "2022-01-21T01:20:48.000Z",
    "direccion": "Republica de costa rica 325",
    "colonia": "Quintero",
    "ciudad": "Tlaquepaque",
    "estado": "Jalisco",
    "cruces": "Rio seco y lerdo de tejada",
    "referencia": "Es una casa con pornton negro y pintura verde",
    "latitud": 20.569447376699006,
    "longitud": -103.2272873133507,
    "codigoPostal": "45550",
    "institucion": 1
  },
  "imagen": [
    {
      "id": 1,
      "name": "FB_IMG_1626638999498.jpg",
      "alternativeText": "",
      "caption": "",
      "width": 1080,
      "height": 796,
      "formats": {
        "thumbnail": {
          "name": "thumbnail_FB_IMG_1626638999498.jpg",
          "hash": "thumbnail_FB_IMG_1626638999498_ff97bc17f5",
          "ext": ".jpg",
          "mime": "image/jpeg",
          "width": 212,
          "height": 156,
          "size": 8.99,
          "path": "",
          "url": "/uploads/thumbnail_FB_IMG_1626638999498_ff97bc17f5.jpg"
        },
        "large": {
          "name": "large_FB_IMG_1626638999498.jpg",
          "hash": "large_FB_IMG_1626638999498_ff97bc17f5",
          "ext": ".jpg",
          "mime": "image/jpeg",
          "width": 1000,
          "height": 737,
          "size": 99.16,
          "path": "",
          "url": "/uploads/large_FB_IMG_1626638999498_ff97bc17f5.jpg"
        },
        "medium": {
          "name": "medium_FB_IMG_1626638999498.jpg",
          "hash": "medium_FB_IMG_1626638999498_ff97bc17f5",
          "ext": ".jpg",
          "mime": "image/jpeg",
          "width": 750,
          "height": 553,
          "size": 64.84,
          "path": "",
          "url": "/uploads/medium_FB_IMG_1626638999498_ff97bc17f5.jpg"
        },
        "small": {
          "name": "small_FB_IMG_1626638999498.jpg",
          "hash": "small_FB_IMG_1626638999498_ff97bc17f5",
          "ext": ".jpg",
          "mime": "image/jpeg",
          "width": 500,
          "height": 369,
          "size": 34.24,
          "path": "",
          "url": "/uploads/small_FB_IMG_1626638999498_ff97bc17f5.jpg"
        }
      },
      "hash": "FB_IMG_1626638999498_ff97bc17f5",
      "ext": ".jpg",
      "mime": "image/jpeg",
      "size": 74.51,
      "url": "/uploads/FB_IMG_1626638999498_ff97bc17f5.jpg",
      "previewUrl": "",
      "provider": "local",
      "provider_metadata": "",
      "created_at": "2021-12-01T21:16:02.000Z",
      "updated_at": "2021-12-01T21:16:02.000Z"
    }
  ],
  "usuarios": [
    {
      "id": 2,
      "username": "Ricardo Garcia Cervantes",
      "email": "ricardo@penguin424.me",
      "provider": "local",
      "confirmed": true,
      "blocked": false,
      "role": 4,
      "created_at": "2021-12-01T21:13:26.000Z",
      "updated_at": "2022-03-14T19:50:30.000Z",
      "usuariodireccion": 1,
      "telefono": "3319747514",
      "nombre": "Ricardo Garcia Cervantes",
      "privacidad": "SIEMPRE",
      "imagen": {
        "id": 3,
        "name": "perrito.jpeg",
        "alternativeText": "",
        "caption": "",
        "width": 225,
        "height": 224,
        "formats": {
          "thumbnail": {
            "name": "thumbnail_perrito.jpeg",
            "hash": "thumbnail_perrito_b157ef019d",
            "ext": ".jpeg",
            "mime": "image/jpeg",
            "width": 157,
            "height": 156,
            "size": 5.91,
            "path": "",
            "url": "/uploads/thumbnail_perrito_b157ef019d.jpeg"
          }
        },
        "hash": "perrito_b157ef019d",
        "ext": ".jpeg",
        "mime": "image/jpeg",
        "size": 7.44,
        "url": "/uploads/perrito_b157ef019d.jpeg",
        "previewUrl": "",
        "provider": "local",
        "provider_metadata": "",
        "created_at": "2021-12-01T21:48:14.000Z",
        "updated_at": "2021-12-01T21:48:14.000Z"
      }
    }
  ],
  "servicios": [
    {
      "id": 1,
      "servicioNombre": "Resonancia",
      "published_at": "2021-12-01T21:19:27.000Z",
      "created_at": "2021-12-01T21:17:00.000Z",
      "updated_at": "2021-12-01T21:19:27.000Z",
      "imagen": [
        {
          "id": 2,
          "name": "vector.jpg",
          "alternativeText": "",
          "caption": "",
          "width": 1954,
          "height": 1099,
          "formats": {
            "thumbnail": {
              "name": "thumbnail_vector.jpg",
              "hash": "thumbnail_vector_1a61579d93",
              "ext": ".jpg",
              "mime": "image/jpeg",
              "width": 245,
              "height": 138,
              "size": 3.57,
              "path": "",
              "url": "/uploads/thumbnail_vector_1a61579d93.jpg"
            },
            "large": {
              "name": "large_vector.jpg",
              "hash": "large_vector_1a61579d93",
              "ext": ".jpg",
              "mime": "image/jpeg",
              "width": 1000,
              "height": 562,
              "size": 26.49,
              "path": "",
              "url": "/uploads/large_vector_1a61579d93.jpg"
            },
            "medium": {
              "name": "medium_vector.jpg",
              "hash": "medium_vector_1a61579d93",
              "ext": ".jpg",
              "mime": "image/jpeg",
              "width": 750,
              "height": 422,
              "size": 17.21,
              "path": "",
              "url": "/uploads/medium_vector_1a61579d93.jpg"
            },
            "small": {
              "name": "small_vector.jpg",
              "hash": "small_vector_1a61579d93",
              "ext": ".jpg",
              "mime": "image/jpeg",
              "width": 500,
              "height": 281,
              "size": 9.78,
              "path": "",
              "url": "/uploads/small_vector_1a61579d93.jpg"
            }
          },
          "hash": "vector_1a61579d93",
          "ext": ".jpg",
          "mime": "image/jpeg",
          "size": 72.8,
          "url": "/uploads/vector_1a61579d93.jpg",
          "previewUrl": "",
          "provider": "local",
          "provider_metadata": "",
          "created_at": "2021-12-01T21:16:47.000Z",
          "updated_at": "2021-12-01T21:16:47.000Z"
        }
      ]
    }
  ],
  "detalleservicios": [
    {
      "id": 1,
      "detalleServicio": "Prueba",
      "descripcionDetalleServicio": "Prueba descripcion",
      "servicio": 2,
      "published_at": "2021-12-04T04:58:03.000Z",
      "created_at": "2021-12-04T04:58:03.000Z",
      "updated_at": "2022-01-21T01:20:48.000Z",
      "institucion": 1
    }
  ],
  "consultas": [
    {
      "id": 18,
      "paciente": 1,
      "institucion": 1,
      "consultaPrecio": 100,
      "consultaComision": 15,
      "consultaTotal": 115,
      "consultaTerminada": true,
      "consultaCalificacion": 0,
      "consultaComentarios": "NINGUN COMENTARIO",
      "conultaTerminada": "2022-01-26T21:53:51.000Z",
      "published_at": "2022-01-27T04:03:41.000Z",
      "created_at": "2022-01-27T04:03:41.000Z",
      "updated_at": "2022-03-23T18:19:28.000Z",
      "prestamista": 2,
      "consultaConfirmada": false,
      "consultaMetodoDePago": "EFECTIVO",
      "consultaPagoReferencia": "EFECTIVO"
    }
  ],
  "citas": [
    {
      "id": 1,
      "consulta": 18,
      "prestamista": 2,
      "institucion": 1,
      "citaDisponible": true,
      "citaFecha": "2022-03-08T06:00:00.000Z",
      "citaHora": "10:00:00.000",
      "paciente": 1,
      "published_at": "2022-01-17T22:50:57.000Z",
      "created_at": "2021-12-04T17:23:10.000Z",
      "updated_at": "2022-03-23T18:19:28.000Z",
      "detalleservicio": 2,
      "citaCosto": 100,
      "citaObservaciones": "Podria llegar 10 minutos tard",
      "servicio": 1,
      "consultorio": 2
    }
  ],
  "consultorios": [
    {
      "id": 1,
      "nombre": "PRUEBA 1",
      "descripcion": "ESTA ES EL PRIMER CONSULTORIO DE PRUENA PARA LA APP",
      "isDisponible": true,
      "institucion": 1,
      "published_at": "2022-03-07T14:39:00.000Z",
      "created_at": "2022-03-07T14:38:25.000Z",
      "updated_at": "2022-03-07T14:39:06.000Z"
    }
  ]
} 
*/

  int? id;
  String? institucionNombre;
  String? publishedAt;
  String? createdAt;
  String? updatedAt;
  InstitucionModelInstituciondireccion? instituciondireccion;
  List<InstitucionModelImagen?>? imagen;
  List<InstitucionModelUsuarios?>? usuarios;
  List<InstitucionModelServicios?>? servicios;
  List<InstitucionModelDetalleservicios?>? detalleservicios;
  List<InstitucionModelConsultas?>? consultas;
  List<InstitucionModelCitas?>? citas;
  List<InstitucionModelConsultorios?>? consultorios;

  InstitucionModel({
    this.id,
    this.institucionNombre,
    this.publishedAt,
    this.createdAt,
    this.updatedAt,
    this.instituciondireccion,
    this.imagen,
    this.usuarios,
    this.servicios,
    this.detalleservicios,
    this.consultas,
    this.citas,
    this.consultorios,
  });
  InstitucionModel.fromJson(Map<String, dynamic> json) {
    id = json['id']?.toInt();
    institucionNombre = json['institucionNombre']?.toString();
    publishedAt = json['published_at']?.toString();
    createdAt = json['created_at']?.toString();
    updatedAt = json['updated_at']?.toString();
    instituciondireccion = (json['instituciondireccion'] != null)
        ? InstitucionModelInstituciondireccion.fromJson(
            json['instituciondireccion'])
        : null;
    if (json['imagen'] != null) {
      final v = json['imagen'];
      final arr0 = <InstitucionModelImagen>[];
      v.forEach((v) {
        arr0.add(InstitucionModelImagen.fromJson(v));
      });
      imagen = arr0;
    }
    if (json['usuarios'] != null) {
      final v = json['usuarios'];
      final arr0 = <InstitucionModelUsuarios>[];
      v.forEach((v) {
        arr0.add(InstitucionModelUsuarios.fromJson(v));
      });
      usuarios = arr0;
    }
    if (json['servicios'] != null) {
      final v = json['servicios'];
      final arr0 = <InstitucionModelServicios>[];
      v.forEach((v) {
        arr0.add(InstitucionModelServicios.fromJson(v));
      });
      servicios = arr0;
    }
    if (json['detalleservicios'] != null) {
      final v = json['detalleservicios'];
      final arr0 = <InstitucionModelDetalleservicios>[];
      v.forEach((v) {
        arr0.add(InstitucionModelDetalleservicios.fromJson(v));
      });
      detalleservicios = arr0;
    }
    if (json['consultas'] != null) {
      final v = json['consultas'];
      final arr0 = <InstitucionModelConsultas>[];
      v.forEach((v) {
        arr0.add(InstitucionModelConsultas.fromJson(v));
      });
      consultas = arr0;
    }
    if (json['citas'] != null) {
      final v = json['citas'];
      final arr0 = <InstitucionModelCitas>[];
      v.forEach((v) {
        arr0.add(InstitucionModelCitas.fromJson(v));
      });
      citas = arr0;
    }
    if (json['consultorios'] != null) {
      final v = json['consultorios'];
      final arr0 = <InstitucionModelConsultorios>[];
      v.forEach((v) {
        arr0.add(InstitucionModelConsultorios.fromJson(v));
      });
      consultorios = arr0;
    }
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['id'] = id;
    data['institucionNombre'] = institucionNombre;
    data['published_at'] = publishedAt;
    data['created_at'] = createdAt;
    data['updated_at'] = updatedAt;
    if (instituciondireccion != null) {
      data['instituciondireccion'] = instituciondireccion!.toJson();
    }
    if (imagen != null) {
      final v = imagen;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v!.toJson());
      });
      data['imagen'] = arr0;
    }
    if (usuarios != null) {
      final v = usuarios;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v!.toJson());
      });
      data['usuarios'] = arr0;
    }
    if (servicios != null) {
      final v = servicios;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v!.toJson());
      });
      data['servicios'] = arr0;
    }
    if (detalleservicios != null) {
      final v = detalleservicios;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v!.toJson());
      });
      data['detalleservicios'] = arr0;
    }
    if (consultas != null) {
      final v = consultas;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v!.toJson());
      });
      data['consultas'] = arr0;
    }
    if (citas != null) {
      final v = citas;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v!.toJson());
      });
      data['citas'] = arr0;
    }
    if (consultorios != null) {
      final v = consultorios;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v!.toJson());
      });
      data['consultorios'] = arr0;
    }
    return data;
  }
}
